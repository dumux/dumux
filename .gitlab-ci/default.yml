default:
  image: $IMAGE
  retry:
    max: 2
    when: runner_system_failure

stages:
  - configure
  - linting
  - select
  - build
  - test


workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE=="parent_pipeline"


# variables that should be overwritten by the trigger
variables:
  MR_TARGET_BRANCH_NAME: ""
  REFERENCE_SHA: ""
  CXX_MAX_STANDARD: "17"


configure:
  stage: configure
  script:
    - |
      echo "source ${DUNE_OPTS_FILE}" > opts_file.opts
      echo "CMAKE_FLAGS=\"\${CMAKE_FLAGS} -DCXX_MAX_STANDARD=${CXX_MAX_STANDARD}\"" >> opts_file.opts
    - dunecontrol --opts=opts_file.opts --current configure
    - dunecontrol --opts=opts_file.opts --current make -j8
    # cache state of the Dune virtual env for Python if it exists (Dune 2.9)
    - |
      if [ -d "/dune/modules/dune-common/build-cmake/dune-env" ]; then
        cp -r /dune/modules/dune-common/build-cmake/dune-env build-cmake
      fi
  artifacts:
    paths:
      - build-cmake
    expire_in: 3 hours


black (python):
  stage: linting
  image: registry.gitlab.com/pipeline-components/black:latest
  script:
  # only check the python folder for now (Python code related to bindings)
  # TODO: maybe extend this to the utility scripts?
    - black --check --verbose -- python
    - black --check --verbose -- test/python
    - black --check --verbose -- bin
    - black --check --verbose -- dumux/porenetwork/util


pylint-flake8 (python):
  stage: linting
  script:
    # restore Python virtual env from cache (job:configure artifacts) (Dune 2.9)
    - |
      if [ -d "build-cmake/dune-env" ]; then
        rm -r /dune/modules/dune-common/build-cmake/dune-env
        mv build-cmake/dune-env /dune/modules/dune-common/build-cmake/dune-env
      fi
    - |
      if [ -d build-cmake/python/dumux ] ; then
        source bin/testing/ci-setup-python-env.sh
        pylint --rcfile=.pylintrc build-cmake/python/dumux
        flake8 build-cmake/python/dumux
      fi
      pylint --rcfile=.pylintrc bin
      pylint --rcfile=.pylintrc dumux/porenetwork/util/*.py
      flake8 bin
      flake8 dumux/porenetwork/util
  needs:
    - job: configure
      artifacts: true

codespell:
  stage: linting
  script:
    - codespell --version
    - codespell --skip="*format/fmt/,*build-cmake*,*.png,*.svg,*.eps,*.bib,*.tex,patches,.git,*staggered_grid.pdf" --ignore-words-list="ges"
  needs:
    - job: configure
      artifacts: true


select tests:
  stage: select
  script:
    - |
      if [[ -n "$DUMUX_SKIP_TEST_SELECTION" ]]; then
        echo "Skipping test selection, build/test stages will consider all tests!"
        touch affectedtests.json
        touch changedfiles.txt

      elif [[ -n "$MR_TARGET_BRANCH_NAME" ]]; then
          echo "Detecting changes w.r.t to target branch '$MR_TARGET_BRANCH_NAME'"
          python3 bin/testing/getchangedfiles.py --outfile changedfiles.txt \
                                                 --target-tree origin/$MR_TARGET_BRANCH_NAME
          python3 bin/testing/findtests.py --outfile affectedtests.json \
                                           --file-list changedfiles.txt \
                                           --build-dir build-cmake

      elif [[ -n "$REFERENCE_SHA" ]]; then
          echo "Detecting changes w.r.t to reference commit $REFERENCE_SHA"
          python3 bin/testing/getchangedfiles.py --outfile changedfiles.txt \
                                                 --source-tree HEAD \
                                                 --target-tree $REFERENCE_SHA
          python3 bin/testing/findtests.py --outfile affectedtests.json \
                                           --file-list changedfiles.txt \
                                           --build-dir build-cmake

      else
          echo "No reference information given."
          echo "Skipping test selection, build/test stages will consider all tests!"
          touch affectedtests.json
          touch changedfiles.txt
      fi
  artifacts:
    paths:
      - affectedtests.json
      - changedfiles.txt
    expire_in: 3 hours
  needs:
    - job: configure
      artifacts: true


compile cpp:
  stage: build
  script:
    # restore Python virtual env from cache (job:configure artifacts) (Dune 2.9)
    # shouldn't be needed to compile C++ but currently is (https://gitlab.dune-project.org/core/dune-common/-/issues/279)
    - |
      if [ -d "build-cmake/dune-env" ]; then
        rm -r /dune/modules/dune-common/build-cmake/dune-env
        mv build-cmake/dune-env /dune/modules/dune-common/build-cmake/dune-env
      fi
    - |
      pushd build-cmake
        make clean && make all
        if [ -s ../affectedtests.json ]; then
          python3 ../bin/testing/runselectedtests.py -c ../affectedtests.json -b
        else
          python3 ../bin/testing/runselectedtests.py --all -b
        fi
      popd
  artifacts:
    paths:
      - build-cmake
      - affectedtests.json
    expire_in: 3 hours
  needs:
    - job: configure
      artifacts: true
    - job: select tests
      artifacts: true


test cpp:
  stage: test
  variables:
    OMPI_ALLOW_RUN_AS_ROOT: 1
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
    DUMUX_NUM_THREADS: 4
  script:
    - |
      pushd build-cmake
        if [ -s ../affectedtests.json ]; then
          python3 ../bin/testing/runselectedtests.py -c ../affectedtests.json -t
        else
          python3 ../bin/testing/runselectedtests.py --all -t
        fi
      popd
  needs:
    - job: compile cpp
      artifacts: true
  artifacts:
    reports:
      junit: junit/dumux-cmake.xml


test python:
  stage: test
  variables:
    OMPI_ALLOW_RUN_AS_ROOT: 1
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
    DUMUX_NUM_THREADS: 4
  script:
    # restore Python virtual env from cache (job:configure artifacts) (Dune 2.9)
    - |
      if [ -d "build-cmake/dune-env" ]; then
        rm -r /dune/modules/dune-common/build-cmake/dune-env
        mv build-cmake/dune-env /dune/modules/dune-common/build-cmake/dune-env
      fi
    - |
      if ([ ! -s changedfiles.txt ] || grep -q python "changedfiles.txt"); then
        if [ ! -s changedfiles.txt ]; then
          echo "Skipping test selection: considering all Python tests."
        else
          echo "Detected changes in the Python bindings/Python code: considering all Python tests."
        fi
        source bin/testing/ci-setup-python-env.sh
        pushd build-cmake
          DUNE_LOG_LEVEL=DEBUG ctest --output-on-failure -L python
          DUNE_LOG_LEVEL=DEBUG ctest --output-on-failure -L python
        popd
      else
        echo "No changes in the Python bindings/Python code detected: skipping tests."
      fi
  needs:
    - job: configure
      artifacts: true
    - job: select tests
      artifacts: true
